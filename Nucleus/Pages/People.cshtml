@page "/people"
@using Nucleus.Models
@using Microsoft.AspNetCore.Blazor.Browser.Interop
@inject ApiClient api
@inject HttpClient Http


<div class="inner grid-container">


    <div class="grid-x grid-padding-x">

        <h1>People</h1>

        <p>
            Have some time to donate? Just keen for a talk? Search here for others who 
            are moving in the same orbit as you and want to talk about stuff.
        </p>
        
        
        <form>
        <div class="grid-container">
            <div class="grid-x grid-padding-x">
                <div class="medium-6 cell">
                    <label>Title
                        <input type="text" bind="@post.Title" name="Title" placeholder="search for posts" />
                    </label>
                </div>
                <div class="medium-6 cell">
                    <label>Type
                        <select name="PostType" bind="@post.PostType">
                            <option value="0">Offer</option>
                            <option value="1">Request</option>
                        </select>
                    </label>
                </div>
                <div class="cell">
                    <label>Message
                        <textarea name="Body" bind="@post.Body"></textarea>
                    </label>
                </div>
                <div class="cell">
                    <label>Show this post until
                        <input type="text" class="flatpickr" bind="@post.Closed" id="post-cutoff" />
                    </label>
                </div>
                <div class="cell">
                    <input type="button" class="button" onclick="@SavePost" value="Save" />
                </div>
            </div>
        </div>
        </form>

    </div>

    <div class="grid-x grid-margin-x">
        <div class="cell large-6">


            @if (posts == null)
            {
                <p><em>Retrieving a list&hellip;</em></p>
            }
            else
            {
                <ul class="no-bullet post-stats">
                    <li>Your offers: <span class="label stat-label">@summary.Offers.Count()</span></li>
                    <li>Your requests: <span class="label stat-label">@summary.Requests.Count()</span> </li>
                </ul>
            }

        </div>
        <div class="cell large-6">
            <h3>Posts</h3>

            <div class="input-group">
                <input type="search" class="input-group-field" value="@searchTerms" placeholder="query" />
                <div class="input-group-button">
                    <input type="button" class="button" onclick="@SearchClick" value="Search" />
                </div>
            </div>

        </div>
    </div>
</div>



@functions {
    IEnumerable<Post> posts;
    string searchTerms = "";
    Post post = new Post() { Closed = DateTime.Today };
    PostSummary summary;
    //IEnumerable<string> tags;

    protected override async Task OnInitAsync()
    {
        posts = await api.GetPostsAsync();
        MapPostSummary();

        if (RegisteredFunction.Invoke<bool>("dp"))
        {
            Console.WriteLine("date picker instantiated");
        }
        StateHasChanged();
    }

    private void MapPostSummary()
    {
        summary = new PostSummary() 
        {
            Offers = posts.Where(p => p.PostType == Nucleus.Models.PostType.Offer).ToArray(),
            Requests = posts.Where(p => p.PostType == Nucleus.Models.PostType.Request).ToArray()
        };
    }

    async void SearchClick()
    {
        posts = await api.GetPostsAsync();
    }

    async void SavePost()
    {
        StateHasChanged();
        await api.SavePostAsync(post);
    }

    class PostSummary
    {
        public Post[] Offers { get; set; }
        public Post[] Requests { get; set; }
    }
}
